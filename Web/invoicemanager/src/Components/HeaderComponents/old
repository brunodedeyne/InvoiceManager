
import React, { Component } from 'react';
import FlatButton from 'material-ui/FlatButton';
import * as routes from '../../constants/routes/routes';
import * as firebase from 'firebase';
import Button from '@material-ui/core/Button';
import {withRouter} from 'react-router-dom';
import Menu from '@material-ui/core/Menu';
import MenuItem from '@material-ui/core/MenuItem';
import Avatar from '@material-ui/core/Avatar';

import PropTypes from 'prop-types';
import { withStyles } from '@material-ui/core/styles';
import Drawer from '@material-ui/core/Drawer';
import AppBar from '@material-ui/core/AppBar';
import Toolbar from '@material-ui/core/Toolbar';
import List from '@material-ui/core/List';
import Typography from '@material-ui/core/Typography';
import Divider from '@material-ui/core/Divider';
import { mailFolderListItems, otherMailFolderListItems } from './titleData';

import Logo from './Logo';
import './Header.css';

const drawerWidth = 240;

const styles = theme => ({
  root: {
    flexGrow: 1,
    height: 430,
    zIndex: 1,
    overflow: 'hidden',
    position: 'relative',
    display: 'flex',
  },
  appBar: {
    zIndex: theme.zIndex.drawer + 1,
  },
  drawerPaper: {
    position: 'relative',
    width: drawerWidth,
  },
  content: {
    flexGrow: 1,
    backgroundColor: theme.palette.background.default,
    padding: theme.spacing.unit * 3,
    minWidth: 0, // So the Typography noWrap works
  },
  toolbar: theme.mixins.toolbar,
});


class Header extends Component {
  constructor (props) {
    super(props);
    this.state = {
        profileUid: '',
        anchorEl: null,
        avatarButton: ''
    };
  }

  handleClickAccountMenu = event => {
    this.setState({ anchorEl: event.currentTarget });
  };

  handleCloseAccountMenu = () => {
    this.setState({ anchorEl: null });
  };

  handleSignOut = () => {
    firebase.auth().signOut().then(function() {
      this.props.history.push('/InvoiceManager/Login');
    }).catch(function(error) {
      console.log(error);
    });
  }

  componentDidMount = () => {
    var user = firebase.auth().currentUser;
    var temptUid = '';

    if (user != null) {
      user.providerData.forEach(function (profile) {      
       temptUid = profile.uid;
      });
      this.setState({profileUid: temptUid});
    }

    let avatarButton = temptUid.substring(0,1).toUpperCase() + temptUid.split('.')[1].substring(0, 1).toUpperCase()
    this.setState({avatarButton: avatarButton});
  }

  render () {
    const { anchorEl } = this.state;

    return (
      <div>
      <AppBar position="absolute">
        <Toolbar>
          <Typography variant="title" color="inherit" noWrap>
          <header className="header">
          <Logo text="Dedeyne - Coomans"/>
          <p className="header__Title">
            {this.props.headerTitle}
          </p>

          <p className="header__Logout">
            <Button
              aria-owns={anchorEl ? 'simple-menu' : null}
              aria-haspopup="true"
              onClick={this.handleClickAccountMenu}
            >
               <Avatar className=""avatar>{this.state.avatarButton}</Avatar>
            </Button>
          </p>
          <Menu
            id="simple-menu"
            anchorEl={anchorEl}
            open={Boolean(anchorEl)}
            onClose={this.handleCloseAccountMenu}
          >
            <MenuItem onClick={this.handleMyAccount}>Mijn Account</MenuItem>
            <MenuItem onClick={this.handleSignOut}>Uitloggen</MenuItem>
          </Menu>
        </header>
          </Typography>
        </Toolbar>
      </AppBar>
      <Drawer
        variant="permanent"
      >
        <div />
        <List>{mailFolderListItems}</List>
        <Divider />
        <List>{otherMailFolderListItems}</List>
      </Drawer>
      <main >
        <div/>
        <Typography noWrap>{'You think water moves fast? You should see ice.'}</Typography>
      </main>
    </div>
        
    );
  }
}

export default withStyles(styles)(Header);
//export default withRouter(Header);